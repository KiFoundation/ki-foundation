version: 2

aliases:
  - &restore-cache
    keys:
      - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-cache-{{ .Branch }}- # Fallback in case checksum fails

  - &save-cache
    key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - node_modules

jobs:

  test_and_build:
    docker:
      - image: circleci/node:11
    working_directory: ~/project
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: yarn install
      - save-cache: *save-cache
      - run: yarn build
      - persist_to_workspace:
          root: build
          paths:
            - '*'

  deploy_preprod:
    docker:
      - image: circleci/python:3.7.0
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: build
      - run: sudo pip install awscli
      - run:
          name: Add robots.txt and Deploy to S3
          command: |
            cd build
            echo -e 'User-Agent: *\nDisallow: /' > robots.txt
            export AWS_ACCESS_KEY_ID=${PREPROD_AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${PREPROD_AWS_SECRET_ACCESS_KEY}
            aws s3 sync static s3://${PREPROD_S3_BUCKET_NAME}/static --cache-control max-age=31536000,public # 1y cache for static files
            aws s3 sync . s3://${PREPROD_S3_BUCKET_NAME} --exclude 'static/*' --cache-control max-age=60,public # 1min cache for others
            aws cloudfront create-invalidation --distribution-id ${PREPROD_CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"
      - run:
          name: Send Slack notification
          command: |
            curl -X POST --data-urlencode "payload={\"channel\": \"#dev\", \"username\": \"Staging Deploy\", \"text\": \"It's time to test! https://website.preprod.kifoundation.tech/ has been deployed to preprod successfully!\", \"icon_emoji\": \":airplane:\"}" ${SLACK_WEBHOOK_URL}

  deploy_prod:
    docker:
      - image: circleci/python:3.7.0
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: build
      - run: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: |
            cd build
            export AWS_ACCESS_KEY_ID=${PROD_AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${PROD_AWS_SECRET_ACCESS_KEY}
            aws s3 sync static s3://${PROD_S3_BUCKET_NAME}/static --cache-control max-age=31536000,public # 1y cache for static files
            aws s3 sync . s3://${PROD_S3_BUCKET_NAME} --exclude 'static/*' --cache-control max-age=60,public # 1min cache for others
            aws cloudfront create-invalidation --distribution-id ${PROD_CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"
      - run:
          name: Send Slack notification
          command: |
            curl -X POST --data-urlencode "payload={\"channel\": \"#dev\", \"username\": \"PROD Deploy\", \"text\": \"Yeah! https://foundation.ki has been deployed to production successfully!\", \"icon_emoji\": \":rocket:\"}" ${SLACK_WEBHOOK_URL}

workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - test_and_build
      - deploy_preprod:
          requires:
            - test_and_build
          filters:
            branches:
              only: preprod
      - deploy_prod:
          requires:
            - test_and_build
          filters:
            branches:
              only: master
